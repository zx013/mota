#:kivy 1.10
#:import Setting setting.Setting
#:import MazeBase setting.MazeBase
#:import Texture cache.Texture


<MenuLabel>:
    #简化后的参数
    idx: 0
    idy: 0
    text: ''
    fsize: 4

    #调节配置中的size时不影响菜单
    ssize: (Setting.size + 2) * Setting.multiple
    pos_temp: {'center_x': Setting.pos_rx(self.idx), 'center_y': Setting.pos_ry(self.idy)}

    #根据地图大小动态变化的大小和位置，需要单独使用self.text，否则会为空
    length: max([0.5 * len(s.encode('gbk')) for s in self.text.split('\n')]) if self.text else 0
    line: len(self.text.split('\n')) if self.text else 1
    pos_hint: self.pos_temp
    size: (self.length * self.font_size, self.line * self.font_size)
    size_hint: (None, None)

    #字体
    font_size: 0.8 * self.fsize * self.ssize
    font_name: Setting.font_path

    #是否被选中，初始化状态
    selected: False
    state: 'down' if self.selected else 'normal'

    #选中后的颜色配置
    disabled_color: (1, 1, 1, 1)
    select_color: (1, 1, 0, 1)
    default_color: (1, 1, 1, 1)
    color: self.select_color if self.state == 'down' else self.default_color


<MenuImage>:
    idx: 0
    idy: 0
    name: ''

    pos_hint: Setting.pos_hint(self.idx, self.idy)
    size: (Setting.pos_realx, Setting.pos_realx)
    size_hint: (None, None)
    texture: Texture.next(self.name)
    allow_stretch: True



<StateLabel>:
    idx: 0
    idy: 0
    offset: (0, 0)
    fsize: 20

    pos: ((self.idx * Setting.pos_size + self.offset[0]) * Setting.multiple, (self.idy * Setting.pos_size + self.offset[1]) * Setting.multiple)
    font_name: Setting.font_path
    font_size: self.fsize * Setting.multiple
    halign: 'center'
    color: (1, 1, 1, 1)
    outline_width: Setting.multiple
    outline_color: (0.25, 0.25, 0.25)


<StateImage>:
    idx: 0
    idy: 0
    offset: (0, 0)
    name: ''

    pos_hint: {'center_x': (self.idx * Setting.pos_size + self.offset[0]) * Setting.multiple / self.parent.width + 0.5, 'center_y': (self.idy * Setting.pos_size + self.offset[1]) * Setting.multiple / self.parent.height + 0.5} if self.parent else {}
    size: (Setting.pos_real, Setting.pos_real)
    size_hint: (None, None)
    texture: Texture.next(self.name)
    allow_stretch: True


<State>:
    size: (Setting.row_size, Setting.col_size)
    size_hint: (None, None)

    FloatLayout:
        StateLabel:
            idx: 0
            idy: - (Setting.col_show - 1) / 2
            text: Setting.title
            fsize: 24
        StateLabel:
            idx: (Setting.row_show - 3) / 2
            idy: - (Setting.col_show - 1) / 2
            fsize: 24
            init: root.herostate.bind('floor', self)

    FloatLayout:
        StateLabel:
            idx: 0
            idy: (Setting.col_show - 1) / 2
            offset: (0, 3)
            fsize: 28
            init: root.herostate.bind('health', self)
        StateImage:
            idx: - (Setting.row_show - 2) / 2
            idy: (Setting.col_show - 1) / 2
            name: 'weapen-attack-01'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: - (Setting.row_show - 5.75) / 2
            idy: (Setting.col_show - 1) / 2
            offset: (0, 2)
            fsize: 24
            halign: 'left'
            init: root.herostate.bind('attack', self)
        StateImage:
            idx: (Setting.row_show - 2) / 2
            idy: (Setting.col_show - 1) / 2
            name: 'weapen-defence-01'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: (Setting.row_show - 5.75) / 2
            idy: (Setting.col_show - 1) / 2
            offset: (0, 2)
            fsize: 24
            halign: 'right'
            init: root.herostate.bind('defence', self)

    FloatLayout:
        StateImage:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 9.5) / 2
            name: 'key-yellow'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 8.5) / 2
            offset: (-1, 1)
            fsize: 20
            init: root.herostate.key.bind(MazeBase.Value.Color.yellow, self)
        StateImage:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 7.5) / 2
            name: 'key-blue'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 6.5) / 2
            offset: (-1, 1)
            fsize: 20
            init: root.herostate.key.bind(MazeBase.Value.Color.blue, self)
        StateImage:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 5.5) / 2
            name: 'key-red'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 4.5) / 2
            offset: (-1, 1)
            fsize: 20
            init: root.herostate.key.bind(MazeBase.Value.Color.red, self)
        StateImage:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 3.5) / 2
            name: 'key-green'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: (Setting.row_show - 1) / 2
            idy: - (Setting.col_show - 2.5) / 2
            offset: (-1, 1)
            fsize: 20
            init: root.herostate.key.bind(MazeBase.Value.Color.green, self)

    FloatLayout:
        StateImage:
            idx: -5 / 2
            idy: - (Setting.col_show - 1) / 2
            name: 'gold'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: -8.25 / 2
            idy: - (Setting.col_show - 1) / 2
            offset: (0, 2)
            fsize: 20
            halign: 'right'
            init: root.herostate.bind('gold', self)
        StateImage:
            idx: 5 / 2
            idy: - (Setting.col_show - 1) / 2
            name: 'experience'
            size: (Setting.pos_small * Setting.multiple, Setting.pos_small * Setting.multiple)
        StateLabel:
            idx: 8.25 / 2
            idy: - (Setting.col_show - 1) / 2
            offset: (0, 2)
            fsize: 20
            halign: 'left'
            init: root.herostate.bind('experience', self)

    FloatLayout:
        MenuLabel:
            idx: -4.5
            idy: -3.25
            text: '↑'
            fsize: 1.5
            disabled: False
            disabled_color: (0.5, 0.5, 0.5, 1)
            on_touch_up:
                self.state = 'normal'
            on_release:
                
        MenuLabel:
            idx: 0
            idy: -3.25
            text: '○'
            fsize: 1.2
            disabled: False
            disabled_color: (0.5, 0.5, 0.5, 1)
            on_touch_up:
                self.state = 'normal'
        MenuLabel:
            idx: 4.5
            idy: -3.25
            text: '↓'
            fsize: 1.5
            disabled: False
            disabled_color: (0.5, 0.5, 0.5, 1)
            on_touch_up:
                self.state = 'normal'
            on_release:
                


<MotaImage>:
    size: (Setting.pos_real, Setting.pos_real)
    size_hint: (None, None)
    allow_stretch: True

<MotaLayer>:
    rows: Setting.row_show
    cols: Setting.col_show
    size: (Setting.row_show * Setting.pos_real, Setting.col_show * Setting.pos_real)
    size_hint: (None, None)
    image: [[None for j in range(Setting.col_show)] for i in range(Setting.row_show)]


<FloorLabel>:
    pos: (0, Setting.size * 3)
    size: (Setting.row_size, Setting.col_size)
    size_hint: (None, None)
    font_name: Setting.font_path
    font_size: str(Setting.size * 40 * Setting.multiple)
    #canvas.opacity = 0


<Mota>:
    size: (Setting.row_size, Setting.col_size)
    size_hint: (None, None)
