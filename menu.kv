#:kivy 1.10
#:import EventLoop kivy.base.EventLoop
#:import NoTransition kivy.uix.screenmanager.NoTransition
#:import FadeTransition kivy.uix.screenmanager.FadeTransition
#:import Store setting.Store
#:import Setting setting.Setting
#:import Mota mota.Mota
#:import Tools tools.Tools
#:import functools functools
#:import gmota g.gmota
#:import gmaze g.gmaze
#:import ginfo g.ginfo
#:import glayout g.glayout


<MenuLabel@ToggleButtonBehavior+Label>:
    #简化后的参数
    idx: 0
    idy: 0
    text: ''
    fsize: 4
    outline: False

    #调节配置中的size时不影响菜单
    ssize: 0.8 * (Setting.size + 2) * Setting.multiple
    pos_temp: {'center_x': self.idx / 32 + 0.5, 'center_y': self.idy / 32 + 0.5}

    #根据地图大小动态变化的大小和位置，需要单独使用self.text，否则会为空
    pos_hint: self.pos_temp
    size: self.texture_size
    size_hint: (None, None)

    #字体
    font_size: self.fsize * self.ssize
    font_name: Setting.font_path

    #是否被选中，初始化状态
    selected: False
    state: 'down' if self.selected else 'normal'

    #选中后的颜色配置
    disabled_color: (1, 1, 1, 1)
    select_color: (1, 1, 0, 1)
    default_color: (1, 1, 1, 1)
    color: self.select_color if self.state == 'down' else self.default_color

    canvas:
        Color:
            rgba: self.color if self.outline else (0, 0, 0, 0)
        Line:
            width: Setting.multiple
            rounded_rectangle: (self.x, self.y, self.texture_size[0], self.texture_size[1], 8 * Setting.multiple)


<MenuImage>:
    idx: 0
    idy: 0
    name: ''
    text: ''
    number: 1
    price: -1
    color: (1, 1, 1, 1) #不同品质不同颜色
    outline_width: 1
    static: False
    selected: False #是否选中
    opened: False #是否打开页面
    used: False #物品是否能够使用
    attribute: {}
    enter: 0 #触发进入页面动作
    exit: 0 #触发退出页面动作
    canvas:
        Color:
            rgba: self.color
        Line:
            width: Setting.multiple
            rounded_rectangle: (self.x - 2 * Setting.multiple, self.y - 2 * Setting.multiple, self.width + 4 * Setting.multiple, self.height + 4 * Setting.multiple, 8 * Setting.multiple)

    pos_hint: {'center_x': self.idx / 32 + 0.5, 'center_y': self.idy / 32 + 0.5}
    size: (Setting.pos_real, Setting.pos_real)
    size_hint: (None, None)
    allow_stretch: True

    Image:
        texture: Texture.next(root.name)
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        size: (Setting.pos_real, Setting.pos_real)
        allow_stretch: True
    Image:
        texture: Texture.next('select') if not root.static and root.selected else Texture.next('empty')
        pos_hint: {'center_x': 0.5, 'center_y': 0.5}
        size: (Setting.pos_real, Setting.pos_real)
        allow_stretch: True
    Label: #数量
        text: '' if root.static else root.text if root.text else str(root.number)
        pos_hint: {'center_x': 0.85, 'center_y': 0.85}
        font_name: Setting.font_path
        font_size: 20 * Setting.multiple
        color: root.color
        outline_width: root.outline_width
    Label: #倒计时，价格
        text: '' if root.static or root.price < 0 else str(root.price)
        pos_hint: {'center_x': 0.5, 'center_y': 0.05}
        font_size: 12 * Setting.multiple
        color: root.color
        outline_width: root.outline_width


<MenuParameter@FloatLayout>:
    idx: 0
    idy: 0
    text: ''
    attr: 'title'
    min: 0
    max: 100
    MenuLabel:
        idx: self.parent.idx
        idy: self.parent.idy
        text: self.parent.text
        fsize: 3
        disabled: True
    MenuLabel:
        id: base
        idx: self.parent.idx + 5.4
        idy: self.parent.idy
        text: str(getattr(Setting, self.parent.attr))
        fsize: 3
        disabled: True
    MenuLabel:
        idx: self.parent.idx + 9
        idy: self.parent.idy
        text: '+'
        fsize: 3
        on_touch_up:
            self.state = 'normal'
        on_release:
            attr = getattr(Setting, self.parent.attr)
            attr += attr < self.parent.max
            setattr(Setting, self.parent.attr, attr)
            base.text = str(attr)
    MenuLabel:
        idx: self.parent.idx + 12.6
        idy: self.parent.idy
        text: '-'
        fsize: 3
        on_touch_up:
            self.state = 'normal'
        on_release:
            attr = getattr(Setting, self.parent.attr)
            attr -= attr > self.parent.min
            setattr(Setting, self.parent.attr, attr)
            base.text = str(attr)


<MenuSetting@FloatLayout>:
    idx: 0
    idy: 0
    type: ''
    MenuLabel:
        idx: self.parent.idx
        idy: self.parent.idy
        text: '基本'
        fsize: 4
        color: self.select_color if self.parent.type == 'base' else self.default_color
        on_touch_up:
            self.state = 'normal'
        on_release:
            Store.save()
            glayout.manager.current = 'setting-base'
    MenuLabel:
        idx: self.parent.idx + 4.2
        idy: self.parent.idy
        text: '|'
        fsize: 6
        disabled: True
    MenuLabel:
        idx: self.parent.idx + 8.4
        idy: self.parent.idy
        text: '操作'
        fsize: 4
        color: self.select_color if self.parent.type == 'operate' else self.default_color
        on_touch_up:
            self.state = 'normal'
        on_release:
            Store.save()
            glayout.manager.current = 'setting-operate'
    MenuLabel:
        idx: self.parent.idx + 12.6
        idy: self.parent.idy
        text: '|'
        fsize: 6
        disabled: True
    MenuLabel:
        idx: self.parent.idx + 16.8
        idy: self.parent.idy
        text: '声音'
        fsize: 4
        color: self.select_color if self.parent.type == 'sound' else self.default_color
        on_touch_up:
            self.state = 'normal'
        on_release:
            Store.save()
            glayout.manager.current = 'setting-sound'
    MenuLabel:
        idx: self.parent.idx + 21
        idy: self.parent.idy
        text: '|'
        fsize: 6
        disabled: True
    MenuLabel:
        idx: self.parent.idx + 25.2
        idy: self.parent.idy
        text: '其它'
        fsize: 4
        color: self.select_color if self.parent.type == 'other' else self.default_color
        on_touch_up:
            self.state = 'normal'
        on_release:
            Store.save()
            glayout.manager.current = 'setting-other'
    MenuLabel:
        idx: 0
        idy: -11.7
        text: '返 回'
        fsize: 3
        on_touch_up:
            self.state = 'normal'
        on_release:
            Store.save()
            glayout.manager.current = 'main'


<MenuMonster@FloatLayout>:
    index: 0
    idx: 0.5
    idy: 3 - 10 * self.index
    fsize: 1.9
    opacity: 1
    monster: ('', '')
    canvas:
        Color:
            rgba: (0, 0.78, 0.55, 1)
        Line:
            width: Setting.multiple
            rounded_rectangle: (Setting.pos_x(root.idx - 12.25) - Setting.pos_realx / 2 - 2 * Setting.multiple, Setting.pos_y(root.idy + 7.5) - Setting.pos_realx / 2 - 2 * Setting.multiple, Setting.pos_realx + 4 * Setting.multiple, Setting.pos_realx + 4 * Setting.multiple, 5 * Setting.multiple) if root.idy is not None else (0, 0, 0, 0, 0)
        Color:
            rgba: (0.96, 0.96, 0.96, 1)
        Line:
            width: 1.5 * Setting.multiple
            rounded_rectangle: (0.05 * Setting.row_size, (0.7 - 0.31 * self.index) * Setting.col_size, 0.9 * Setting.row_size, 0.25 * Setting.col_size, Setting.size * Setting.multiple)
    MenuImage:
        idx: root.idx - 12.25
        idy: root.idy + 7.5
        name: 'ground'
        size: (Setting.pos_realx + 2, Setting.pos_realx + 2)
        static: True
    MenuImage:
        idx: root.idx - 12.25
        idy: root.idy + 7.5
        name: '-'.join(root.monster)
        static: True
    MenuLabel:
        idx: root.idx - 1
        idy: root.idy + 10.25
        text: ' '.join(str(gmaze.get_monster(root.monster).get('name', '未知')))
        fsize: root.fsize + 0.3
        disabled: True
        color: (0.82, 0.41, 0.12, 1)
    MenuLabel:
        idx: root.idx - 7.75
        idy: root.idy + 8.75
        text: '生命:'
        fsize: root.fsize
        disabled: True
        color: (0.5, 1, 0.5, 1)
    MenuLabel:
        idx: root.idx - 4.75
        idy: root.idy + 8.75
        text: str(gmaze.get_monster(root.monster).get('health', -1))
        fsize: root.fsize
        disabled: True
        color: (0.5, 1, 0.5, 1)
    MenuLabel:
        idx: root.idx + 1.25
        idy: root.idy + 8.75
        text: '攻击:'
        fsize: root.fsize
        disabled: True
        color: (1, 0.5, 0.5, 1)
    MenuLabel:
        idx: root.idx + 4.25
        idy: root.idy + 8.75
        text: str(gmaze.get_monster(root.monster).get('attack', -1))
        fsize: root.fsize
        disabled: True
        color: (1, 0.5, 0.5, 1)
    MenuLabel:
        idx: root.idx + 9.25
        idy: root.idy + 8.75
        text: '防御:'
        fsize: root.fsize
        disabled: True
        color: (0.5, 0.5, 1, 1)
    MenuLabel:
        idx: root.idx + 12.25
        idy: root.idy + 8.75
        text: str(gmaze.get_monster(root.monster).get('defence', -1))
        fsize: root.fsize
        disabled: True
        color: (0.5, 0.5, 1, 1)
    MenuLabel:
        idx: root.idx - 7.75
        idy: root.idy + 6.75
        text: '伤害:'
        fsize: root.fsize
        disabled: True
        color: (1, 0.5, 1, 1)
    MenuLabel:
        idx: root.idx - 4.75
        idy: root.idy + 6.75
        text: str(gmaze.get_damage(gmaze.herostate.attack, gmaze.herostate.defence, root.monster))
        fsize: root.fsize
        disabled: True
        color: (1, 0.5, 1, 1)
    MenuLabel:
        idx: root.idx + 1.25
        idy: root.idy + 6.75
        text: '技能:'
        fsize: root.fsize
        disabled: True
        color: (1, 1, 0.5, 1)
    MenuLabel:
        idx: root.idx + 4.25
        idy: root.idy + 6.75
        text: '魔法' if gmaze.get_monster(root.monster).get('ismagic', False) else '无'
        fsize: root.fsize - 0.2
        disabled: True
        color: (1, 1, 0.5, 1)
    MenuLabel:
        idx: root.idx - 7.75
        idy: root.idy + 4.75
        text: '金币:'
        fsize: root.fsize
        disabled: True
        color: (1, 0.84, 0, 1)
    MenuLabel:
        idx: root.idx - 4.75
        idy: root.idy + 4.75
        text: str(gmaze.get_monster(root.monster).get('gold', -1))
        fsize: root.fsize
        disabled: True
        color: (1, 0.84, 0, 1)
    MenuLabel:
        idx: root.idx + 1.25
        idy: root.idy + 4.75
        text: '经验:'
        fsize: root.fsize
        disabled: True
        color: (0.53, 0.81, 0.92, 1)
    MenuLabel:
        idx: root.idx + 4.25
        idy: root.idy + 4.75
        text: str(gmaze.get_monster(root.monster).get('experience', -1))
        fsize: root.fsize
        disabled: True
        color: (0.53, 0.81, 0.92, 1)


<MenuMonsterManual@FloatLayout>:
    monster_list: ()
    page: 0
    number: 3
    page_prev: page_prev
    page_next: page_next
    MenuMonster:
        index: 0
        monster: root.monster_list[root.page * root.number] if root.page * root.number < len(root.monster_list) else ('', '')
        opacity: 1 if root.page * root.number < len(root.monster_list) else  0
    MenuMonster:
        index: 1
        monster: root.monster_list[root.page * root.number + 1] if root.page * root.number + 1 < len(root.monster_list) else ('', '')
        opacity: 1 if root.page * root.number + 1 < len(root.monster_list) else  0
    MenuMonster:
        index: 2
        monster: root.monster_list[root.page * root.number + 2] if root.page * root.number + 2 < len(root.monster_list) else ('', '')
        opacity: 1 if root.page * root.number + 2 < len(root.monster_list) else  0
    MenuLabel:
        id: page_prev
        idx: -12
        idy: -15
        text: '上一页'
        fsize: 2.5
        disabled: root.page <= 0
        disabled_color: (0.5, 0.5, 0.5, 1)
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.page -= root.page > 0
            self.state = 'normal'
            self.color = self.disabled_color if self.disabled else self.default_color
            page_next.color = self.default_color
    MenuLabel:
        id: page_next
        idx: 12
        idy: -15
        text: '下一页'
        fsize: 2.5
        disabled: (root.page + 1) * root.number >= len(root.monster_list)
        disabled_color: (0.5, 0.5, 0.5, 1)
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.page += (root.page + 1) * root.number < len(root.monster_list)
            self.state = 'normal'
            self.color = self.disabled_color if self.disabled else self.default_color
            page_prev.color = self.default_color
    MenuLabel:
        idx: 0
        idy: -15
        text: '返 回'
        fsize: 2
        on_touch_up:
            self.state = 'normal'
        on_release:
            self.color = self.default_color
            glayout.manager.current = 'mota'


<MenuDialog>:
    idx: 0
    idy: 0
    name: 'hero-blue-down'
    text: ''
    page: 0
    pages: [['', '', '']]
    end: False
    role_label: role_label
    role_image: role_image
    page_prev: page_prev
    page_next: page_next
    page_enter: page_enter
    page_exit: page_exit
    canvas:
        Color:
            rgba: (0.96, 0.96, 0.96, 1)
        Line:
            width: root.l
            rounded_rectangle: (Setting.pos_x(root.idx) - root.w / 2 - root.l, Setting.pos_y(root.idy) - root.h / 2 - root.l, root.w, root.h, Setting.size * Setting.multiple)
        Color:
            rgba: (0.96, 0.96, 0.96, 0.1)
        RoundedRectangle:
            pos: (Setting.pos_x(root.idx) - root.w / 2 - root.l, Setting.pos_y(root.idy) - root.h / 2 - root.l)
            size: (root.w, root.h)
            radius: [Setting.size * Setting.multiple]
    MenuImage:
        idx: root.idx - 4
        idy: root.idy + 1.5
        name: 'ground'
        static: True
        size: (Setting.pos_realx, Setting.pos_realx)
    MenuImage:
        id: role_image
        idx: root.idx - 4
        idy: root.idy + 1.5
        name: root.name
        static: True
        size: (Setting.pos_realx, Setting.pos_realx)
    MenuLabel:
        id: role_label
        idx: root.idx + 1.5
        idy: root.idy + 2.5
        text: '勇 者'
        fsize: 2
        disabled: True
    MenuLabel:
        idx: root.idx + 1.85
        idy: root.idy + 0.75
        text: root.pages[root.page][0]
        fsize: 1.5
        disabled: True
    MenuLabel:
        idx: root.idx + 0.1
        idy: root.idy - 0.75
        text: root.pages[root.page][1]
        fsize: 1.5
        disabled: True
    MenuLabel:
        idx: root.idx + 0.1
        idy: root.idy - 2.25
        text: root.pages[root.page][2]
        fsize: 1.5
        disabled: True
    MenuLabel:
        id: page_prev
        idx: root.idx - 4.5
        idy: root.idy - 3.25
        text: '←'
        fsize: 1.5
        disabled: root.page <= 0
        disabled_color: (0.7, 0.7, 0.7, 1)
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.page -= root.page > 0
            self.state = 'normal'
            root.show()
    MenuLabel:
        id: page_enter
        idx: root.idx
        idy: root.idy - 3.25
        text: '○'
        fsize: 1.2
        disabled: root.page < len(root.pages) - 1
        disabled_color: (0.7, 0.7, 0.7, 1)
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.close() if not root.update() else None
    MenuLabel:
        id: page_next
        idx: root.idx + 4.5
        idy: root.idy - 3.25
        text: '→'
        fsize: 1.5
        disabled: root.page >= len(root.pages) - 1
        disabled_color: (0.7, 0.7, 0.7, 1)
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.page += root.page < len(root.pages) - 1
            self.state = 'normal'
            root.show()
    MenuLabel:
        id: page_exit
        idx: root.idx + 5.25
        idy: root.idy + 2.75
        text: '×'
        fsize: 1.2
        on_touch_up:
            self.state = 'normal'
        on_release:
            root.close()


<MenuItemBoard@GridLayout>:
    psize: (0, 0)
    rsize: (0, 0)
    pwidth: self.psize[0]
    pheight: self.psize[1]
    rwidth: self.rsize[0]
    rheight: self.rsize[1]

    space: 10 * Setting.multiple
    spacing: (self.space, self.space)
    rows: int((self.rheight - 2 * self.space) / (Setting.pos_real + self.space))
    cols: int((self.rwidth - 2 * self.space) / (Setting.pos_real + self.space))

    pos_hint: {'center_x': 0.5, 'center_y': 0.5}
    width: self.cols * Setting.pos_real + (self.cols - 1) * self.space
    height: self.rows * Setting.pos_real + (self.rows - 1) * self.space
    size_hint: (None, None)
    offset_x: self.pwidth * self.pos_hint['center_x'] - self.rwidth / 2
    offset_y: self.pheight * self.pos_hint['center_y'] - self.rheight / 2
    canvas:
        Color:
            rgba: Setting.rgb(255, 255, 255, 255) #Setting.rgb(118, 77, 57, 255)
        Line:
            width: 1.5 * Setting.multiple
            rounded_rectangle: (0.5 * self.space + self.offset_x, 0.5 * self.space + self.offset_y, self.rwidth - self.space, self.rheight - self.space, 2 * self.space) if self.space else (0, 0, 0, 0, 0)
        #Color:
        #    rgba: Setting.rgb(255, 255, 255, 255)
        #Line:
        #    width: Setting.multiple
        #    rounded_rectangle: (self.space + self.offset_x + (self.rwidth - self.width - 3.5 * self.space) / 2, self.space + self.offset_y + (self.rheight - self.height - 3.5 * self.space) / 2, self.width + 1.5 * self.space, self.height + 1.5 * self.space, self.space) if self.space else (0, 0, 0, 0, 0)
        Color:
            rgba: Setting.rgb(255, 255, 255, 25) #Setting.rgb(249, 205, 173, 255) #Setting.rgb(147, 224, 255, 255)
        RoundedRectangle:
            pos: (0.5 * self.space + self.offset_x, 0.5 * self.space + self.offset_y) if self.space else (0, 0)
            size: (self.rwidth - self.space, self.rheight - self.space) if self.space else (0, 0)
            radius: [2 * self.space] if self.space else [0]


<MenuTaskLabel@ToggleButtonBehavior+Label>:
    task_id: ''
    info: ''
    achieve: 0
    goal: 0
    text: '{} ({}/{})'.format(self.info, self.achieve, self.goal) if self.goal != 0 else self.info
    color: (1, 1, 1, 1) if self.goal == 0 else (1, 1, 0, 1) if self.achieve >= self.goal else (1, 1, 1, 0.5)
    height: self.texture_size[1] #宽度是固定的
    size_hint: (None, None)
    text_size: (self.width - 16 * Setting.multiple, None)
    font_size: 20 * Setting.multiple
    font_name: Setting.font_path
    halign: 'left'
    on_release:
        self.achieve += 1
        print(self.text)


<MenuTaskBoard>:
    viewclass: 'MenuTaskLabel'
    data: []
    pos: (8 * Setting.multiple, 20 * Setting.multiple)
    size: (self.parent.width - 16 * Setting.multiple, self.parent.height - 40 * Setting.multiple)
    size_hint: (None, None)

    RecycleBoxLayout:
        default_size: (self.parent.width, None)
        default_size_hint: (1, None)
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'


<MenuInfoLabel@Label>:
    height: self.texture_size[1] #宽度是固定的
    size_hint: (None, None)
    text_size: (self.width - 16 * Setting.multiple, None)
    font_size: 16 * Setting.multiple
    font_name: Setting.font_path
    halign: 'left'


<MenuInfoBoard>:
    viewclass: 'MenuInfoLabel'
    data: []
    pos: (8 * Setting.multiple, 20 * Setting.multiple)
    size: (self.parent.width - 16 * Setting.multiple, self.parent.height - 40 * Setting.multiple)
    size_hint: (None, None)

    RecycleBoxLayout:
        default_size: (self.parent.width, None)
        default_size_hint: (1, None)
        size_hint_y: None
        height: self.minimum_height
        orientation: 'vertical'


<MenuShop>:
    size: (0, 0)
    size_hint: (None, None)
    board: board
    init: self.update()
    MenuLabel:
        text: '商店'
        pos_hint: {'center_x': 0.5, 'center_y': 0.55}
        outline: True
    MenuItemBoard:
        id: board
        psize: root.size
        rsize: (0.9 * root.width, 0.4 * root.height)
        pos_hint: {'center_x': 0.5, 'center_y': 0.3}


<MenuManagerMain>:
    name: 'main'
    step: Setting.title_width / (len(Setting.title) - 1)
    title_x: [- Setting.title_width / 2 + n * self.step for n, c in enumerate(Setting.title)]
    title_y: [7 + (Setting.title_radius ** 2 - x ** 2) ** 0.5 - (Setting.title_radius ** 2 - 14 ** 2) ** 0.5 for x in self.title_x]

    MenuLabel:
        idx: self.parent.title_x[0]
        idy: self.parent.title_y[0]
        text: Setting.title[0]
        fsize: 8
        disabled: True
    MenuLabel:
        idx: self.parent.title_x[1]
        idy: self.parent.title_y[1]
        text: Setting.title[1]
        fsize: 8
        disabled: True
    MenuLabel:
        idx: self.parent.title_x[2]
        idy: self.parent.title_y[2]
        text: Setting.title[2]
        fsize: 8
        disabled: True
    MenuLabel:
        idx: self.parent.title_x[3]
        idy: self.parent.title_y[3]
        text: Setting.title[3]
        fsize: 8
        disabled: True
    MenuLabel:
        idx: self.parent.title_x[4]
        idy: self.parent.title_y[4]
        text: Setting.title[4]
        fsize: 8
        disabled: True
    MenuLabel:
        idx: 0
        idy: 6
        text: ' '.join([c for c in Setting.version])
        fsize: 4
        disabled: True
    MenuLabel:
        idx: 0
        idy: 0
        text: '开 始'
        fsize: 6
        on_touch_up:
            self.state = 'normal'
        on_release:
            glayout.manager.current = 'start'
    MenuLabel:
        idx: 0
        idy: -6.3
        text: '设 置'
        fsize: 6
        on_touch_up:
            self.state = 'normal'
        on_release:
            glayout.manager.current = 'setting-base'
    MenuLabel:
        idx: 0
        idy: -11.7
        text: '退 出'
        fsize: 4
        on_touch_up:
            self.state = 'normal'
        on_release:
            EventLoop.exit()


<MenuManagerStart>:
    name: 'start'
    MenuLabel:
        idx: 0
        idy: 4.5
        text: '开 始'
        fsize: 4
        on_touch_up:
            self.state = 'normal'
        on_release:
            glayout.manager.current = 'mota'
            gmota.start()
    MenuLabel:
        idx: 0
        idy: 0
        text: '继 续'
        fsize: 4
        on_touch_up:
            self.state = 'normal'
        on_release:
            glayout.manager.current = 'mota'
            gmota.load()
    MenuLabel:
        idx: 0
        idy: -4.5
        text: '返 回'
        fsize: 3
        on_touch_up:
            self.state = 'normal'
        on_release:
            glayout.manager.current = 'main'


<MenuManagerMota>:
    name: 'mota'
    on_pre_enter:
        glayout.hero.current = 'hero'
        glayout.item.current = 'item'
        glayout.status.current = 'status'
        glayout.story.current = 'story'
        glayout.message.current = 'message'
        ginfo.update('欢迎来到无尽的魔塔。')
        ginfo.update('欢迎来到无尽的魔塔。', 'hint')
        ginfo.update('欢迎来到无尽的魔塔。', 'warn')
        ginfo.update('欢迎来到无尽的魔塔。', 'secret')
    Mota:
        dialog: dialog
        shop: shop
    MenuDialog:
        id: dialog
        init: self.close()
    MenuShop:
        id: shop
        size: glayout.manager.size
        init: self.close()


<MenuManagerSettingBase>
    name: 'setting-base'

    MenuSetting:
        idx: -12.6
        idy: 12.6
        type: 'base'

    FloatLayout:
        MenuLabel:
            idx: -9
            idy: 7.2
            text: '新 手'
            fsize: 4
            group: 'different'
            allow_no_selection: False
            selected: Setting.difficult_type == 'very-easy'
            on_release: Setting.difficult_type = 'very-easy'
        MenuLabel:
            idx: -9
            idy: 3.6
            text: '容 易'
            fsize: 4
            group: 'different'
            allow_no_selection: False
            selected: Setting.difficult_type == 'easy'
            on_release: Setting.difficult_type = 'easy'
        MenuLabel:
            idx: -9
            idy: 0
            text: '正 常'
            fsize: 4
            group: 'different'
            allow_no_selection: False
            selected: Setting.difficult_type == 'normal'
            on_release: Setting.difficult_type = 'normal'
        MenuLabel:
            idx: -9
            idy: -3.6
            text: '困 难'
            fsize: 4
            group: 'different'
            allow_no_selection: False
            selected: Setting.difficult_type == 'hard'
            on_release: Setting.difficult_type = 'hard'
        MenuLabel:
            idx: -9
            idy: -7.2
            text: '噩 梦'
            fsize: 4
            group: 'different'
            allow_no_selection: False
            selected: Setting.difficult_type == 'very-hard'
            on_release: Setting.difficult_type = 'very-hard'

    MenuParameter:
        idx: 0
        idy: 7.2
        text: '层数'
        attr: 'base'
        min: 2

    MenuParameter:
        idx: 0
        idy: 3.6
        text: '大小'
        attr: 'size'
        min: 3

    FloatLayout:
        MenuLabel:
            idx: 5.4
            idy: 0
            text: '血 量'
            fsize: 3
            selected: Setting.show_health
            on_release: Setting.show_health = not Setting.show_health
        MenuLabel:
            idx: 1.8
            idy: -3.6
            text: '攻 击'
            fsize: 3
            selected: Setting.show_attack
            on_release: Setting.show_attack = not Setting.show_attack
        MenuLabel:
            idx: 9
            idy: -3.6
            text: '防 御'
            fsize: 3
            selected: Setting.show_defence
            on_release: Setting.show_defence = not Setting.show_defence
        MenuLabel:
            idx: 5.4
            idy: -7.2
            text: '伤 害'
            fsize: 3
            selected: Setting.show_damage
            on_release: Setting.show_damage = not Setting.show_damage


<MenuManagerSettingOperate>:
    name: 'setting-operate'

    MenuSetting:
        idx: -12.6
        idy: 12.6
        type: 'operate'

    MenuLabel:
        idx: 0
        idy: 7.2
        text: '触 控'
        fsize: 4
    MenuLabel:
        idx: -9
        idy: 3.6
        text: '触 控'
        fsize: 3
        group: 'touch'
        allow_no_selection: False
        selected: Setting.touch
        on_release: Setting.touch = True
    MenuLabel:
        idx: 9
        idy: 3.6
        text: '虚 拟'
        fsize: 3
        group: 'touch'
        allow_no_selection: False
        selected: not Setting.touch
        on_release: Setting.touch = False
    MenuLabel:
        idx: 0
        idy: -1.8
        text: '键 盘'
        fsize: 4
        disabled: True
    MenuLabel:
        idx: -9
        idy: -7.2
        text: '      W\nA    S    D'
        fsize: 3
        group: 'keyboard'
        allow_no_selection: False
        selected: Setting.keyboard_wasd
        on_release: Setting.keyboard_wasd = True
    MenuLabel:
        idx: 9
        idy: -7.2
        text: '       ↑\n←   ↓   →'
        fsize: 3
        group: 'keyboard'
        allow_no_selection: False
        selected: not Setting.keyboard_wasd
        on_release: Setting.keyboard_wasd = False


<MenuManagerSettingSound>:
    name: 'setting-sound'

    MenuSetting:
        idx: -12.6
        idy: 12.6
        type: 'sound'

    MenuLabel:
        idx: 0
        idy: 7.2
        text: '背 景'
        fsize: 4
        selected: Setting.sound_back
        on_release: Setting.sound_back = not Setting.sound_back
    MenuParameter:
        idx: -5.4
        idy: 3.6
        text: '音 量'
        attr: 'sound_back_volume'
        min: 0
        max: 100
    MenuLabel:
        idx: 0
        idy: -1.8
        text: '音 效'
        fsize: 4
        selected: Setting.sound_effect
        on_release: Setting.sound_effect = not Setting.sound_effect
    MenuParameter:
        idx: -5.4
        idy: -5.4
        text: '音 量'
        attr: 'sound_effect_volume'
        min: 0
        max: 100


<MenuManagerSettingOther>:
    name: 'setting-other'

    MenuSetting:
        idx: -12.6
        idy: 12.6
        type: 'other'

    MenuLabel:
        idx: 0
        idy: 7.2
        text: ''
        fsize: 3
        disabled: True
    MenuLabel:
        idx: 0
        idy: 3.6
        text: '制 作:  zx013'
        fsize: 3
        disabled: True
    MenuLabel:
        idx: 0
        idy: 0
        text: '音 乐:  zx013'
        fsize: 3
        disabled: True
    MenuLabel:
        idx: 0
        idy: -3.6
        text: '美 术:  zx013'
        fsize: 3
        disabled: True
    MenuLabel:
        idx: 0
        idy: -7.2
        text: '联系及反馈: zxlib@foxmail.com'
        fsize: 2
        disabled: True


<MenuManagerMonsterManual>:
    name: 'monster-manual'
    on_pre_enter:
        monster_manual.monster_list = tuple(set(functools.reduce(lambda x, y: x + y, [[pos[1] for pos in row if pos[0] == MazeBase.Type.Active.monster] for row in gmaze.maze[gmaze.herostate.floor]])))
        monster_manual.page = 0
        page_prev = monster_manual.page_prev
        page_next = monster_manual.page_next
        page_prev.color = page_prev.disabled_color if page_prev.disabled else page_prev.default_color
        page_next.color = page_next.disabled_color if page_next.disabled else page_next.default_color
    MenuMonsterManual:
        id: monster_manual
        monster_list: ()


<MenuScreenManager>:
    transition: FadeTransition()
    size_hint: (None, None)

<MenuStatus>:
    Screen:
        name: 'welcome'
        MenuWelcomeLabel:
            #pos: (Setting.row_size, 0)
            pos_hint: {}
            text: Setting.status_text
            fsize: 1.6
            disabled: True
    Screen:
        name: 'status'
        MenuStatusLabel:
            #pos: (0, 0)
            #pos_hint: {}
            text: '长按显示详细信息'
            fsize: 1.6
            disabled: True


<MenuHeroLabel@MenuLabel>:
    fsize: 2.5
    pos_hint: {}
    disabled: True

<MenuHero>:
    Screen:
        name: 'welcome'
    Screen:
        name: 'hero'
        MenuItemBoard:
            psize: root.size
            rsize: root.size
        GridLayout:
            pos_hint: {'center_x': 0.75, 'center_y': 0.4}
            cols: 2
            row_default_height: 32 * Setting.multiple
            row_force_default: True
            MenuHeroLabel:
                text: '生命: '
            MenuHeroLabel:
                init: gmaze.herostate.bind('health', self)
            MenuHeroLabel:
                text: '攻击: '
            MenuHeroLabel:
                init: gmaze.herostate.bind('attack', self)
            MenuHeroLabel:
                text: '防御: '
            MenuHeroLabel:
                init: gmaze.herostate.bind('defence', self)
            MenuHeroLabel:
                text: '金钱: '
            MenuHeroLabel:
                init: gmaze.herostate.bind('gold', self)
            MenuHeroLabel:
                text: '经验: '
            MenuHeroLabel:
                init: gmaze.herostate.bind('experience', self)


<MenuItem>:
    Screen:
        name: 'welcome'
    Screen:
        name: 'item'
        MenuItemBoard:
            psize: root.size
            rsize: root.size
            MenuImage:
                name: 'key-yellow'
                init: gmaze.herostate.key.bind(MazeBase.Value.Color.yellow, self)
            MenuImage:
                name: 'key-blue'
                init: gmaze.herostate.key.bind(MazeBase.Value.Color.blue, self)
            MenuImage:
                name: 'key-red'
                init: gmaze.herostate.key.bind(MazeBase.Value.Color.red, self)
            MenuImage:
                name: 'key-green'
                init: gmaze.herostate.key.bind(MazeBase.Value.Color.green, self)
            MenuImage:
                name: 'item-manual'
                on_enter:
                    root.parent.manager.current = 'monster-manual'
                    self.opened = True
                on_exit:
                    root.parent.manager.current = 'mota'
            MenuImage:
                name: 'shop-blue'
                on_enter:
                    gmota.shop.open()
                    self.opened = True
                on_exit:
                    gmota.shop.close()
            MenuImage:
                name: 'item-upstair'
                on_enter:
                    gmota.floorlabel.text = str(gmota.hero.floor_up)
                    gmota.hero.stair = MazeBase.Value.Stair.up
            MenuImage:
                name: 'item-downstair'
                on_enter:
                    gmota.floorlabel.text = str(gmota.hero.floor_down)
                    gmota.hero.stair = MazeBase.Value.Stair.down
            MenuImage:
                name: 'item-pickaxe'


<MenuStory>:
    Screen:
        name: 'welcome'
    Screen:
        name: 'story'
        MenuItemBoard:
            psize: root.size
            rsize: root.size
        MenuTaskBoard:


<MenuMessage>:
    Screen:
        name: 'welcome'
    Screen:
        name: 'message'
        MenuItemBoard:
            psize: root.size
            rsize: root.size
        MenuInfoBoard:


<MenuProgress>:
    name: ''
    value: {}
    ready: {}
    progress: 0
    opacity: 1
    Screen:
        name: 'progress'

        background_color: (1, 0, 0, 0)
        Label:
            canvas:
                Color:
                    rgba: Setting.rgb(255, 255, 255, 127)
                Line:
                    cap: 'none'
                    width: 3 * Setting.multiple
                    circle: (root.width, 0, 50 * Setting.multiple, 270, 360)
                Color:
                    rgba: Setting.rgb(255, 255, 255, 255) #Setting.rgb(250, 227, 113, 255)
                Line:
                    cap: 'none'
                    width: 3 * Setting.multiple
                    circle: (root.width, 0, 50 * Setting.multiple, 270, 270 + root.progress * 90 / 100) if root.progress else (0, 0, 0)
            text: str(int(root.progress)) if root.progress >= 0 else ''
            pos: (root.width - self.width, 0)
            size: self.texture_size
            size_hint: (None, None)
            font_size: 32 * Setting.multiple
            font_name: Setting.font_path
            bold: True
            halign: 'right'
            color: Setting.rgb(255, 255, 255, 128 + root.progress * 127 / 100)
            opacity: root.opacity
